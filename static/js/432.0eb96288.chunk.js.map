{"version":3,"file":"static/js/432.0eb96288.chunk.js","mappings":"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","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { enqueueSnackbar } from 'notistack';\nimport { string } from 'yup';\n\nimport {\n  Container,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  Avatar,\n  Link,\n  CircularProgress,\n  Alert,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport { signUp } from 'redux/authOperations';\nimport { useAuth } from 'hooks/useAuth';\nimport { clearError } from 'redux/authSlice';\n\nexport default function RegisterPage() {\n  const { error, isAuth } = useAuth();\n  const [isValid, setValid] = useState({\n    firstName: true,\n    lastName: true,\n    email: true,\n    password: true,\n  });\n  const dispatch = useDispatch();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  console.log(isValid);\n  const nameSchema = string()\n    .matches(/^[a-zA-Zа-яіїєґА-ЯІЇЄҐ]+([' -][a-zA-Zа-яіїєґА-ЯІЇЄҐ]*)*$/)\n    .max(35);\n\n  const emailSchema = string().email();\n\n  const passwordSchema = string().matches(/^.{8,}$/);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearError());\n    };\n  }, [dispatch]);\n\n  const inputChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'firstName':\n        nameSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, firstName: true })))\n          .catch(() => setValid(prev => ({ ...prev, firstName: false })));\n        setFirstName(value);\n        break;\n      case 'lastName':\n        nameSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, lastName: true })))\n          .catch(() => setValid(prev => ({ ...prev, lastName: false })));\n        setLastName(value);\n        break;\n      case 'email':\n        emailSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, email: true })))\n          .catch(() => setValid(prev => ({ ...prev, email: false })));\n        setEmail(value);\n        break;\n      case 'password':\n        passwordSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, password: true })))\n          .catch(() => setValid(prev => ({ ...prev, password: false })));\n        setPassword(value);\n        break;\n      default:\n        throw new Error('unsupported input name');\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const isValidData =\n      isValid.firsName && isValid.lastName && isValid.email && isValid.password;\n    if (!isValidData) {\n      enqueueSnackbar('Please check the entered data', {\n        variant: 'error',\n      });\n      return;\n    }\n    const formEls = e.target.elements;\n    const user = {\n      name: `${formEls.firstName.value} ${formEls.lastName.value}`,\n      email: formEls.email.value,\n      password: formEls.password.value,\n    };\n    dispatch(signUp(user));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          {isAuth ? (\n            <CircularProgress size={24} color=\"inherit\" />\n          ) : (\n            <LockOutlinedIcon />\n          )}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={submitHandler}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                onChange={inputChangeHandler}\n                type=\"text\"\n                value={firstName}\n                error={!isValid.firstName}\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                onChange={inputChangeHandler}\n                type=\"text\"\n                value={lastName}\n                error={!isValid.lastName}\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"family-name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={inputChangeHandler}\n                type=\"email\"\n                value={email}\n                error={!isValid.email}\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={inputChangeHandler}\n                value={password}\n                error={!isValid.password}\n                title=\"Password must contain at least 8 characters\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            disabled={isAuth}\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link variant=\"body2\" component={RouteLink} to=\"/login\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      {error && (\n        <Alert severity=\"error\">\n          {error !== 'Network Error'\n            ? 'This user is already registered. Please try again with a another email'\n            : error}\n        </Alert>\n      )}\n    </Container>\n  );\n}\n"],"names":["RegisterPage","useAuth","error","isAuth","useState","firstName","lastName","email","password","isValid","setValid","dispatch","useDispatch","setFirstName","setLastName","setEmail","setPassword","console","log","nameSchema","string","matches","max","emailSchema","passwordSchema","useEffect","clearError","inputChangeHandler","e","currentTarget","name","value","validate","then","prev","catch","Error","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","size","color","variant","noValidate","onSubmit","preventDefault","firsName","formEls","target","elements","user","signUp","enqueueSnackbar","mt","container","spacing","item","xs","sm","onChange","type","autoComplete","required","fullWidth","id","label","autoFocus","title","disabled","mb","justifyContent","RouteLink","to","severity"],"sourceRoot":""}