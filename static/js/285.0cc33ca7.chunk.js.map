{"version":3,"file":"static/js/285.0cc33ca7.chunk.js","mappings":"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","sources":["components/ContactForm.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Filter.jsx","components/Dialog.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  Box,\n  TextField,\n  Button,\n  Container,\n  Avatar,\n  CircularProgress,\n} from '@mui/material';\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { enqueueSnackbar } from 'notistack';\nimport { string } from 'yup';\n\nimport { closeDrawer } from 'redux/modalSlice';\nimport { selectDrawerVariant, selectIdToEdit } from 'redux/selectors';\nimport {\n  useAddContactMutation,\n  useEditContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contactsApi';\n\nexport default function ContactForm() {\n  const drawerVariant = useSelector(selectDrawerVariant);\n  const contactId = useSelector(selectIdToEdit);\n  const [isValid, setValid] = useState({ name: true, number: true });\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n  const [editContact, { isLoading: isEditing }] = useEditContactMutation();\n  const isLoading = isAdding || isEditing;\n  const dispatch = useDispatch();\n\n  const formVariant = {\n    new: 'new',\n    edit: 'edit',\n  };\n\n  const isNew = drawerVariant === formVariant.new;\n  const isEdit = drawerVariant === formVariant.edit;\n\n  const findContact = contactId => contacts.find(({ id }) => id === contactId);\n\n  const prevContact = useRef(isEdit ? findContact(contactId) : null);\n\n  const [name, setName] = useState(\n    contactId ? findContact(contactId).name : ''\n  );\n  const [number, setNumber] = useState(\n    contactId ? findContact(contactId).number : ''\n  );\n\n  const nameSchema = string()\n    .matches(/^[a-zA-Zа-яіїєґА-ЯІЇЄҐ]+([' -][a-zA-Zа-яіїєґА-ЯІЇЄҐ]*)*$/)\n    .max(35);\n\n  const numberSchema = string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/\n    )\n    .max(20);\n\n  const inputChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        nameSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, name: true })))\n          .catch(() => setValid(prev => ({ ...prev, name: false })));\n        setName(value);\n        break;\n      case 'number':\n        numberSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, number: true })))\n          .catch(() => setValid(prev => ({ ...prev, number: false })));\n        setNumber(value);\n        break;\n      default:\n        throw new Error('unsupported input name');\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const {\n      name: { value: name },\n      number: { value: number },\n    } = e.currentTarget.elements;\n    if (!isValid.name) {\n      enqueueSnackbar('Please enter the correct name', {\n        variant: 'error',\n      });\n      return;\n    }\n    if (!isValid.number) {\n      enqueueSnackbar('Please enter the correct number', {\n        variant: 'error',\n      });\n      return;\n    }\n\n    const isExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isSame =\n      prevContact?.current?.name?.toLowerCase() === name.toLowerCase();\n    if (isExists && !isSame) {\n      enqueueSnackbar(`${name} is already in contacts`, {\n        variant: 'warning',\n      });\n      return;\n    }\n\n    if (isNew) {\n      addContact({ name, number })\n        .then(({ data }) => {\n          dispatch(closeDrawer());\n          enqueueSnackbar(`Contact ${data.name} added`, {\n            variant: 'success',\n          });\n        })\n        .catch(() =>\n          enqueueSnackbar('Something went wrong', {\n            variant: 'error',\n          })\n        );\n    }\n    if (isEdit) {\n      editContact([contactId, { name, number }])\n        .then(({ data }) => {\n          dispatch(closeDrawer());\n          enqueueSnackbar(`Contact ${data.name} edited`, {\n            variant: 'success',\n          });\n        })\n        .catch(() =>\n          enqueueSnackbar('Something went wrong', {\n            variant: 'error',\n          })\n        );\n    }\n  };\n\n  return (\n    <Container maxWidth=\"xs\" sx={{ my: 4 }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          {isLoading ? (\n            <CircularProgress size={24} color=\"inherit\" />\n          ) : isEdit ? (\n            <EditIcon />\n          ) : (\n            <ContactPageIcon />\n          )}\n        </Avatar>\n        <Box\n          sx={{ textAlign: 'center' }}\n          component=\"form\"\n          onSubmit={submitHandler}\n        >\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            error={!isValid.name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            autoFocus\n            onChange={inputChangeHandler}\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            error={!isValid.number}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={inputChangeHandler}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n            disabled={isLoading}\n          >\n            {isNew ? 'Add new contact' : 'Save contact'}\n          </Button>\n        </Box>{' '}\n        <Button\n          type=\"button\"\n          fullWidth\n          variant=\"outlined\"\n          sx={{ mb: 2 }}\n          onClick={() => dispatch(closeDrawer())}\n        >\n          Cancel\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  ListItem,\n  IconButton,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemButton,\n  Box,\n  CircularProgress,\n  Tooltip,\n} from '@mui/material';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { enqueueSnackbar } from 'notistack';\n\nimport { openDrawerEdit } from 'redux/modalSlice';\nimport { useDeleteContactMutation } from 'redux/contactsApi';\n\nexport default function ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem\n      sx={{ pr: '96px', pl: 0 }}\n      secondaryAction={\n        <Box sx={{ display: 'flex', gap: '10px' }}>\n          <Tooltip title=\"Edit\">\n            <IconButton\n              aria-label=\"edit\"\n              onClick={() => dispatch(openDrawerEdit(id))}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Delete\">\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              disabled={isLoading}\n              onClick={() =>\n                deleteContact(id)\n                  .then(({ data }) => {\n                    enqueueSnackbar(`Contact ${data.name} deleted`, {\n                      variant: 'info',\n                    });\n                  })\n                  .catch(() =>\n                    enqueueSnackbar('Something went wrong', {\n                      variant: 'error',\n                    })\n                  )\n              }\n            >\n              {isLoading ? <CircularProgress size={24} /> : <DeleteIcon />}\n            </IconButton>\n          </Tooltip>\n        </Box>\n      }\n    >\n      <ListItemButton href={`tel:${number}`} sx={{ p: 0 }}>\n        <ListItemAvatar>\n          <Avatar>\n            <ContactPhoneIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={`${name}`} secondary={`${number}`} />\n      </ListItemButton>\n    </ListItem>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { List } from '@mui/material';\n\nimport  ContactItem  from 'components/ContactItem';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport { selectFilter } from 'redux/selectors';\n\nexport default function ContactList() {\n  const { data = [] } = useFetchContactsQuery();\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = data.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterHandler = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value.toLowerCase()));\n  };\n\n  return (\n    <TextField\n      fullWidth\n      id=\"standard-controlled\"\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      value={filter}\n      onChange={filterHandler}\n    />\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { selectIsDialogOpen } from 'redux/selectors';\nimport { closeDialog, closeDrawer } from 'redux/modalSlice';\n\nexport default function AlertDialog() {\n  const isDrawerOpen = useSelector(selectIsDialogOpen);\n  const dispatch = useDispatch();\n\n  const closeAll = () => {\n    dispatch(closeDialog());\n    dispatch(closeDrawer());\n  };\n\n  return (\n    <Dialog\n      open={isDrawerOpen}\n      onClose={() => dispatch(closeDialog())}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Are you sure?</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Сlosing the window will delete unsaved data\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => dispatch(closeDialog())}>No</Button>\n        <Button onClick={closeAll} autoFocus>\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  Fab,\n  Drawer,\n  Typography,\n  Container,\n  Alert,\n  AlertTitle,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\nimport Dialog from 'components/Dialog';\n\nimport { openDrawerNew, closeDrawer, openDialog } from 'redux/modalSlice';\nimport { useFetchContactsQuery } from 'redux/contactsApi';\nimport { selectIsDrawerOpen } from 'redux/selectors';\n\nexport default function ContactsPage() {\n  const isDrawerOpen = useSelector(selectIsDrawerOpen);\n  const dispatch = useDispatch();\n  const { data = [], isError, isLoading } = useFetchContactsQuery();\n  const isMobile = useMediaQuery('(max-width:786px)');\n\n  const handleAccidentalClicks = (_, reason) => {\n    if (reason === 'escapeKeyDown' || reason === 'backdropClick') {\n      dispatch(openDialog());\n      return;\n    }\n    dispatch(closeDrawer());\n  };\n\n  return (\n    <Container component=\"main\">\n      {isLoading && <Loader />}\n      {isError && (\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          Something went wrong. Please reload the page\n        </Alert>\n      )}\n      {!isLoading && !isError && data.length === 0 ? (\n        <Typography sx={{ mt: 4 }} align=\"center\" variant=\"h5\" paragraph>\n          Your phone book is empty. Please click the button in the lower right\n          corner and add new contacts.\n        </Typography>\n      ) : (\n        !isLoading &&\n        !isError && (\n          <>\n            <Typography align=\"center\" component=\"h1\" variant=\"h4\">\n              Contacts\n            </Typography>\n            <Filter />\n            <ContactList />\n          </>\n        )\n      )}\n      <Drawer\n        anchor={isMobile ? 'top' : 'bottom'}\n        open={isDrawerOpen}\n        ModalProps={{ onClose: handleAccidentalClicks }}\n      >\n        <ContactForm />\n      </Drawer>\n      <Fab\n        sx={{\n          position: 'fixed',\n          bottom: 16,\n          right: 16,\n        }}\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={() => dispatch(openDrawerNew())}\n      >\n        <AddIcon />\n      </Fab>\n      <Dialog />\n    </Container>\n  );\n}\n"],"names":["ContactForm","drawerVariant","useSelector","selectDrawerVariant","contactId","selectIdToEdit","useState","name","number","isValid","setValid","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","isAdding","isLoading","useEditContactMutation","editContact","isEditing","dispatch","useDispatch","isNew","isEdit","findContact","find","id","prevContact","useRef","setName","setNumber","nameSchema","string","matches","max","numberSchema","inputChangeHandler","e","currentTarget","value","validate","then","prev","catch","Error","Container","maxWidth","sx","my","Box","display","flexDirection","alignItems","Avatar","m","bgcolor","CircularProgress","size","color","Edit","ContactPage","textAlign","component","onSubmit","preventDefault","elements","isExists","some","contact","toLowerCase","isSame","current","closeDrawer","enqueueSnackbar","variant","TextField","fullWidth","margin","label","type","error","title","required","autoFocus","onChange","Button","mt","mb","disabled","onClick","ContactItem","useDeleteContactMutation","deleteContact","ListItem","pr","pl","secondaryAction","gap","Tooltip","IconButton","openDrawerEdit","edge","Delete","ListItemButton","href","p","ListItemAvatar","ContactPhone","ListItemText","primary","secondary","ContactList","filter","selectFilter","visibleContacts","includes","List","map","Filter","setFilter","AlertDialog","isDrawerOpen","selectIsDialogOpen","Dialog","open","onClose","closeDialog","DialogTitle","DialogContent","DialogContentText","DialogActions","ContactsPage","selectIsDrawerOpen","isError","isMobile","useMediaQuery","Loader","Alert","severity","AlertTitle","length","Typography","align","paragraph","Drawer","anchor","ModalProps","_","reason","openDialog","Fab","position","bottom","right","openDrawerNew","Add"],"sourceRoot":""}