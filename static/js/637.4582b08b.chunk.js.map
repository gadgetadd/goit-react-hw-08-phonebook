{"version":3,"file":"static/js/637.4582b08b.chunk.js","mappings":"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","sources":["pages/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { string } from 'yup';\nimport { enqueueSnackbar } from 'notistack';\n\nimport {\n  Container,\n  Avatar,\n  Typography,\n  TextField,\n  Box,\n  Button,\n  Grid,\n  Link,\n  Alert,\n  CircularProgress,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport { logIn } from 'redux/authOperations';\nimport { useAuth } from 'hooks/useAuth';\n\nexport default function LoginPage() {\n  const { error, isAuth } = useAuth();\n  const [isValid, setValid] = useState({ email: true, password: true });\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const emailSchema = string().email();\n\n  const passwordSchema = string().matches(/^.{8,}$/);\n\n  const inputChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'email':\n        emailSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, email: true })))\n          .catch(() => setValid(prev => ({ ...prev, email: false })));\n        setEmail(value);\n        break;\n      case 'password':\n        passwordSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, password: true })))\n          .catch(() => setValid(prev => ({ ...prev, password: false })));\n        setPassword(value);\n        break;\n      default:\n        throw new Error('unsupported input name');\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();if (!isValid.email) {\n      enqueueSnackbar('Please enter the correct email', {\n        variant: 'error',\n      });\n      return;\n    }\n    if (!isValid.password) {\n      enqueueSnackbar('Please enter the correct password', {\n        variant: 'error',\n      });\n      return;\n    }\n    const formEls = e.target.elements;\n    const user = {\n      email: formEls.email.value,\n      password: formEls.password.value,\n    };\n    dispatch(logIn(user));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          {isAuth ? (\n            <CircularProgress size={24} color=\"inherit\" />\n          ) : (\n            <LockOutlinedIcon />\n          )}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={submitHandler}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            onChange={inputChangeHandler}\n            type=\"email\"\n            value={email}\n            error={!isValid.email}\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            onChange={inputChangeHandler}\n            value={password}\n            error={!isValid.password}\n            title=\"Password must contain at least 8 characters\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            disabled={isAuth}\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link variant=\"body2\" component={RouteLink} to=\"/register\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      {error && (\n        <Alert severity=\"error\">\n          {error !== 'Network Error'\n            ? 'Invalid email or password. Please check and try again.'\n            : error}\n        </Alert>\n      )}\n    </Container>\n  );\n};\n"],"names":["LoginPage","useAuth","error","isAuth","useState","email","password","isValid","setValid","dispatch","useDispatch","setEmail","setPassword","emailSchema","string","passwordSchema","matches","inputChangeHandler","e","currentTarget","name","value","validate","then","prev","catch","Error","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","size","color","variant","onSubmit","preventDefault","formEls","target","elements","user","logIn","enqueueSnackbar","noValidate","mt","onChange","type","margin","required","fullWidth","id","label","autoComplete","autoFocus","title","disabled","mb","container","justifyContent","item","RouteLink","to","severity"],"sourceRoot":""}